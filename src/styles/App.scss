@use "utilities/utils" as u;

// Media queries
@media (max-width: 640px) {
  .campanula-logo {
    display: none;
  }
  .main-lines {
    padding-left: 0 !important;
  }
  .main-headline {
    text-align: center;
  }
  .main-subheadline {
    text-align: center;
  }
  .main-header {
    font-size: 1.75rem !important;
  }
}

@media (min-width: 640px) {
  .campanula-logo-mobile {
    display: none;
  }
}

// Default styles

#root {
  font-family: "Readex Pro", sans-serif;
  color: #171717;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  align-items: center;
  justify-content: center;
}

nav {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  padding: 1rem;
  gap: 2rem;
  flex-wrap: wrap;
  box-sizing: border-box;
  width: 100%;
  // position: sticky;
  // transition: u.$defTransition;
}

main {
  flex: 1;
  display: flex;
  flex-direction: column;
  width: 100%;
  
  // & > section {
  //   max-width: min(90rem, 100%);
  //   padding: 1rem;
  // }
}

footer {
  display: flex;
  background-color: u.$black;
  color: u.$cream;
  flex-direction: column;
  box-sizing: border-box;
  width: 100%;
  padding: 1rem;
  & a:link {
    color: u.$diarrhea;
  }
}

h1, h2, h3, h4, h5, h6 {
  font-family: "Fraunces", serif;
  font-weight: 400;
}

h2.main-header {
  font-size: 2.5rem; 
}

a, a:visited, a:hover, a:active {
  color: inherit;
}

section {
  // padding: 1rem;
}

input {
  border: solid u.$black 2px;
}

// Custom styles

.scale-object {
  width: min(80rem, 95%);
  justify-self: center;
}

.main-top {
  box-sizing: border-box;
  display: grid;
  align-items: center;
  justify-self: center;
  justify-content: center;
  flex-wrap: nowrap;
  background-image: linear-gradient(to right, rgba(255,255,255,100) 30%, rgba(255,255,255,0));
  & > * {
    grid-column-start: 1;
    grid-row-start: 1;
  }
}

.main-lines {
  width: min(95vw, 80rem);
  padding-left: 1rem;
}

.main-headline {
  font-size: min(7rem, 12vw);
  font-weight: 400;
  max-width: 60rem;
}

.main-subheadline {
  font-size: min(3.5rem, 6vw);
  font-weight: 100;
}

.main-tomato {
  justify-self: end;
  max-height: 50rem;
  max-width: 50rem;
  width: 100vw;
  z-index: -3;
  right: 0;
}

.gradient-customizable {
  font-weight: 600;
  font-family: "Fraunces", serif;
  font-style: italic;
  background-image: linear-gradient(90deg, u.$teal, u.$purple, u.$velvet);
  background-clip: text;
  background-size: 100%;
  -webkit-text-fill-color: transparent;
  -moz-text-fill-color: transparent;
}

.campanula-logo {
  font-size: 3rem;
  font-family: "Major Mono Display", monospace;
  font-weight: 400;
  color: u.$black;
  line-height: 3rem;
}

.campanula-logo-mobile {
  font-size: 3rem;
  font-family: "Major Mono Display", monospace;
  font-weight: 400;
  line-height: 3rem;
}

.short-hr {
  color: u.$diarrhea;
  width: min(2rem, 95vw);
  border-top: u.$diarrhea 0.25rem solid;
  margin-top: 2rem;
  margin-bottom: 2rem;
}

.long-hr {
  color: u.$diarrhea;
  width: min(42rem, 95vw);
  border-top: u.$diarrhea 0.25rem solid;
  margin-top: 2rem;
  margin-bottom: 2rem;
}

// 


// Utilities

.cream {
  color: u.$cream;
}

.teal {
  color: u.$teal;
}

.purple {
  color: u.$purple;
}

.velvet {
  color: u.$velvet;
}

.black { 
  color: u.$black; 
}

.diarrhea {
  color: u.$diarrhea;
}

.bgteal { background-color: u.$teal; }
.bgpurple { background-color: u.$purple; }
.bgvelvet { background-color: u.$velvet; }

.full-width-svg {
  width: 100%;
}

.button {
  color: u.$black !important;
  border: solid 2px u.$black;
  line-height: 1.75rem;
  padding: 0.5rem;
  text-transform: uppercase;
  font-family: "Azeret Mono", monospace;
  transition: u.$defTransition;
  background-color: u.$cream;
  box-shadow: -0.25rem 0.25rem u.$teal;
  &:hover {
    box-shadow: -0.5rem 0.375rem u.$teal;
  }
}

// Font utils

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  
  @return $string;
}

@function to-kebab-case($string) {
  @return to-lower-case(str-replace($string, ' ', '-'))
}

@each $font in u.$fonts {
  .font-#{to-kebab-case($font)} {
    font-family: $font;
  }
}